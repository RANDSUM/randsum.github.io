---
export interface Props {
  href: string
  variant?: 'primary' | 'secondary' | 'tertiary'
  class?: string
  target?: string
  rel?: string
}

const {
  href,
  variant = 'primary',
  class: className = '',
  target,
  rel
} = Astro.props

const baseClasses =
  'group relative inline-flex items-center justify-center rounded-xl px-4 py-3 text-sm font-semibold shadow-elegant hover:shadow-deep transition-all duration-300 ease-out transform hover:scale-105 hover:-translate-y-0.5 focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-offset-randsum-950 overflow-hidden'

const variantClasses = {
  primary:
    'bg-gradient-to-r from-silver-300 to-silver-200 hover:from-silver-200 hover:to-silver-100 text-silver-800 hover:text-silver-900 focus-visible:ring-silver-400',
  secondary:
    'bg-transparent border-2 border-silver-300/60 hover:border-silver-200 text-silver-300 hover:text-silver-50 hover:bg-silver-50/5 focus-visible:ring-silver-400',
  tertiary:
    'bg-transparent text-silver-300 hover:text-silver-50 hover:bg-silver-50/10 focus-visible:ring-silver-400'
}
---

<a
  href={href}
  class={`${baseClasses} ${variantClasses[variant]} ${className}`}
  target={target}
  rel={rel}
>
  <span class="relative z-10 flex items-center gap-2">
    <slot />
  </span>
  <div
    class="absolute inset-0 rounded-xl bg-gradient-to-r from-white/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none"
  >
  </div>
</a>
