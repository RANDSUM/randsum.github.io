---
import '../styles/global.css'
import Sidebar from '../components/Sidebar.astro'
import { mainNavigation } from '../config/navigation'
import type { NavigationItem } from '../components/Sidebar.astro'

export interface SidebarLink {
  href: string
  text: string
  sublinks?: SidebarLink[]
}

export interface SidebarContent {
  title: string
  links: SidebarLink[]
}

export interface Props {
  title: string
  description?: string
  additionalNavigationItems?: NavigationItem[]
  sidebarContent?: SidebarContent
}

const title = Astro.props.title
const description =
  Astro.props.description ??
  'An ergonomic, flexible, and type-safe dice rolling ecosystem for NPM'
const additionalNavigationItems = Astro.props.additionalNavigationItems ?? []

const sidebarContent = Astro.props.sidebarContent
---

<!doctype html>
<html lang="en" class="dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/webp" href="/icon.webp" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=JetBrains+Mono:wght@400;500;600&display=swap"
      rel="stylesheet"
    />
  </head>
  <body class="bg-randsum-950 text-silver-50 font-sans antialiased">
    <div class="min-h-screen flex">
      <Sidebar
        navigationItems={sidebarContent ? undefined : mainNavigation}
        additionalItems={sidebarContent ? undefined : additionalNavigationItems}
        sidebarContent={sidebarContent}
      />

      <!-- Mobile menu button -->
      <div class="lg:hidden fixed top-0 left-0 right-0 z-50 bg-randsum-950">
        <div class="flex items-center justify-between h-16 px-4">
          <a
            href="/"
            class="flex items-center hover:opacity-80 transition-opacity"
          >
            <img class="h-8 w-auto" src="/icon.webp" alt="RANDSUM" />
            <span class="ml-3 text-xl font-bold text-silver-50">RANDSUM</span>
          </a>
          <button
            id="mobile-menu-button"
            class="text-silver-400 hover:text-silver-200 focus:outline-none focus:text-silver-200 transition-colors"
          >
            <svg
              class="h-6 w-6"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
          </button>
        </div>
      </div>

      <!-- Main content -->
      <main
        class="flex-1 lg:pl-69 bg-gradient-to-br from-randsum-950 via-randsum-900 to-randsum-800"
      >
        <div class="pt-16 lg:pt-0">
          <slot />
        </div>
      </main>
    </div>

    <script>
      // Mobile menu toggle functionality
      document.addEventListener('DOMContentLoaded', function () {
        const mobileMenuButton = document.getElementById('mobile-menu-button')
        const mobileMenu = document.getElementById('mobile-menu')
        const mobileMenuOverlay = document.getElementById('mobile-menu-overlay')

        function toggleMobileMenu() {
          if (mobileMenu) {
            mobileMenu.classList.toggle('hidden')
          }
        }

        function closeMobileMenu() {
          if (mobileMenu) {
            mobileMenu.classList.add('hidden')
          }
        }

        if (mobileMenuButton) {
          mobileMenuButton.addEventListener('click', toggleMobileMenu)
        }

        if (mobileMenuOverlay) {
          mobileMenuOverlay.addEventListener('click', closeMobileMenu)
        }

        // Close mobile menu when clicking on a link
        const mobileMenuLinks = document.querySelectorAll('#mobile-menu a')
        mobileMenuLinks.forEach((link) => {
          link.addEventListener('click', closeMobileMenu)
        })

        // Close mobile menu on escape key
        document.addEventListener('keydown', function (event) {
          if (event.key === 'Escape') {
            closeMobileMenu()
          }
        })
      })
    </script>
  </body>
</html>
